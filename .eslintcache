[{"D:\\Projetos_andre\\Learning\\crud-app\\src\\components\\Tables.js":"1","D:\\Projetos_andre\\Learning\\crud-app\\src\\index.js":"2","D:\\Projetos_andre\\Learning\\crud-app\\src\\App.js":"3","D:\\Projetos_andre\\Learning\\crud-app\\src\\reportWebVitals.js":"4","D:\\Projetos_andre\\Learning\\crud-app\\src\\components\\ModalMain.js":"5","D:\\Projetos_andre\\Learning\\crud-app\\src\\components\\Formu.js":"6","D:\\Projetos_andre\\Learning\\crud-app\\src\\services\\api.js":"7"},{"size":2060,"mtime":1608787523536,"results":"8","hashOfConfig":"9"},{"size":547,"mtime":1608596052319,"results":"10","hashOfConfig":"9"},{"size":203,"mtime":1608683907472,"results":"11","hashOfConfig":"9"},{"size":362,"mtime":1606866031069,"results":"12","hashOfConfig":"9"},{"size":927,"mtime":1608687105670,"results":"13","hashOfConfig":"9"},{"size":8883,"mtime":1608878143502,"results":"14","hashOfConfig":"9"},{"size":100,"mtime":1608598376597,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"jzrym7",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"D:\\Projetos_andre\\Learning\\crud-app\\src\\components\\Tables.js",[],"D:\\Projetos_andre\\Learning\\crud-app\\src\\index.js",[],"D:\\Projetos_andre\\Learning\\crud-app\\src\\App.js",["35"],"import React, {useState} from 'react'\nimport { Tables } from './components/Tables'\n\n\nfunction App() {\n\n\n  return (\n    <div className=\"App\">\n      \n      <Tables/>\n    </div>\n  );\n}\n\nexport default App;\n",["36","37"],"D:\\Projetos_andre\\Learning\\crud-app\\src\\reportWebVitals.js",[],["38","39"],"D:\\Projetos_andre\\Learning\\crud-app\\src\\components\\ModalMain.js",["40","41","42","43","44","45"],"import React,{ useState } from 'react'\nimport api from '../services/api' \n\nimport {\n  Form,\n  FormGroup, \n  Label, \n  Input, \n  FormText,\n  Modal ,\n  ModalHeader, \n  ModalBody,\n  ModalFooter,\n  Button\n} from 'reactstrap'\n\nexport const ModalMain = ({ modal, toggle, id, ondelete }) => {\n\n\n  const handleDelete = async (id) => {\n    console.log(id)\n    const removed = await api.delete(`/users/${id}`)\n    if(removed.status === 200) {\n      ondelete(id)\n    }\n  }\n  \n\n\n  return (\n    <>\n        <Modal isOpen={modal} toggle={toggle}>\n          <ModalHeader toggle={toggle}>Delete user</ModalHeader>\n          <ModalBody>\n            Delete user?\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"primary\" onClick={() => {toggle();  handleDelete(id)} }>Delete</Button>{' '}\n            <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\n          </ModalFooter>\n        </Modal>\n    </>\n  );\n}\n\n\n\n\n","D:\\Projetos_andre\\Learning\\crud-app\\src\\components\\Formu.js",["46","47"],"D:\\Projetos_andre\\Learning\\crud-app\\src\\services\\api.js",[],["48","49"],{"ruleId":"50","severity":1,"message":"51","line":1,"column":16,"nodeType":"52","messageId":"53","endLine":1,"endColumn":24},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"54","replacedBy":"58"},{"ruleId":"56","replacedBy":"59"},{"ruleId":"50","severity":1,"message":"51","line":1,"column":16,"nodeType":"52","messageId":"53","endLine":1,"endColumn":24},{"ruleId":"50","severity":1,"message":"60","line":5,"column":3,"nodeType":"52","messageId":"53","endLine":5,"endColumn":7},{"ruleId":"50","severity":1,"message":"61","line":6,"column":3,"nodeType":"52","messageId":"53","endLine":6,"endColumn":12},{"ruleId":"50","severity":1,"message":"62","line":7,"column":3,"nodeType":"52","messageId":"53","endLine":7,"endColumn":8},{"ruleId":"50","severity":1,"message":"63","line":8,"column":3,"nodeType":"52","messageId":"53","endLine":8,"endColumn":8},{"ruleId":"50","severity":1,"message":"64","line":9,"column":3,"nodeType":"52","messageId":"53","endLine":9,"endColumn":11},{"ruleId":"50","severity":1,"message":"65","line":66,"column":9,"nodeType":"52","messageId":"53","endLine":66,"endColumn":19},{"ruleId":"66","severity":1,"message":"67","line":68,"column":19,"nodeType":"52","endLine":68,"endColumn":26},{"ruleId":"54","replacedBy":"68"},{"ruleId":"56","replacedBy":"69"},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-native-reassign",["70"],"no-negated-in-lhs",["71"],["70"],["71"],"'Form' is defined but never used.","'FormGroup' is defined but never used.","'Label' is defined but never used.","'Input' is defined but never used.","'FormText' is defined but never used.","'phoneRegex' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useMemo does nothing when called with only one argument. Did you forget to pass an array of dependencies?",["70"],["71"],"no-global-assign","no-unsafe-negation"]